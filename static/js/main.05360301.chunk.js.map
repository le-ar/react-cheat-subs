{"version":3,"sources":["features/user/data/entities/user.ts","App.tsx","features/auth/data/datasources/authRemoteDatasource.ts","features/auth/presentation/stores/authStore.ts","index.tsx","core/failures.ts","core/utils.ts"],"names":["User","props","id","name","avatar","point","orderCount","this","Auth","lazy","TaskPage","App","inject","observer","event","preventDefault","window","location","reload","isLoading","authStore","isMyAccountLoading","content","myAccountHasError","title","Section","href","onClick","refresh","myAccount","className","fallback","Component","AuthRemoteDatasourceImpl","sleep","AuthStore","authRemoteDatasource","setInterval","updateMyAccount","getMyAccount","result","Failure","FailureUnauthorized","myAccountError","observable","action","ReactDOM","render","StrictMode","i18n","en","document","getElementById","FailureTasksCompleted","duration","Promise","res","setTimeout"],"mappings":"4RAAqBA,EAOjB,WAAYC,GAMR,yBAZJC,QAYG,OAXHC,UAWG,OAVHC,YAUG,OATHC,WASG,OARHC,gBAQG,EACCC,KAAKL,GAAKD,EAAMC,GAChBK,KAAKJ,KAAOF,EAAME,KAClBI,KAAKH,OAASH,EAAMG,OACpBG,KAAKF,MAAQJ,EAAMI,MACnBE,KAAKD,WAAaL,EAAMK,YCX1BE,EAAOC,gBAAK,kBAAM,iCAClBC,EAAWD,gBAAK,kBAAM,uDAQfE,EAFZC,YAAO,YAER,GADCC,YACD,wKAEUC,GACNA,EAAMC,iBACNC,OAAOC,SAASC,WAJpB,+BAOY,IAAD,EAIS,MAJT,OACHC,EAAS,UAAGZ,KAAKN,MAAMmB,iBAAd,aAAG,EAAsBC,mBAClCC,EAAU,kBAAC,IAAD,MAETH,KACH,UAAIZ,KAAKN,MAAMmB,iBAAf,aAAI,EAAsBG,qBACxBD,EACE,kBAAC,IAAD,CAAME,MAAM,gGACV,kBAAC,IAAKC,QAAN,KACE,uBAAGC,KAAK,IAAIC,QAAS,SAACb,GAAD,OAAW,EAAKc,QAAQd,KAA7C,qKAMgC,QAApC,UAAAP,KAAKN,MAAMmB,iBAAX,eAAsBS,aACxBP,EAAU,kBAACd,EAAD,QAGR,UAAAD,KAAKN,MAAMmB,iBAAX,eAAsBS,qBAAqB7B,IAC7CsB,EAAU,kBAACZ,EAAD,QAKd,OACE,kBAAC,IAAD,KACE,yBAAKoB,UAAU,kEAEb,kBAAC,WAAD,CAAUC,SAAU,kBAAC,IAAD,OACjBT,SArCb,GAAyBU,eAAzB,M,iCCRaC,EAAb,iOAEcC,YAAM,KAFpB,gCAMe,IAAIlC,EAAK,CACZE,GAAI,EACJC,KAAM,gEACNC,OAAQ,4EACRC,MAAO,IACPC,WAAY,KAXxB,wG,wCCHa6B,GAAb,aAGI,WAAYlC,GAER,yBAJImC,0BAIL,4KACC7B,KAAK6B,qBAAuBnC,EAAMmC,qBAN1C,uDAWgB,IAAD,OACPC,aAAY,WACe,OAAnB,EAAKR,WACL,EAAKS,oBAEV,OAhBX,sJAyBQ/B,KAAKc,oBAAqB,EAzBlC,SA2Bcd,KAAK+B,kBA3BnB,OA6BQ/B,KAAKc,oBAAqB,EA7BlC,8QAiC2Bd,KAAK6B,qBAAqBG,eAjCrD,QAiCYC,EAjCZ,kBAkC8BxC,EAClBO,KAAKsB,UAAYW,EACVA,aAAkBC,MACrBD,aAAkBE,KAClBnC,KAAKgB,mBAAoB,EACzBhB,KAAKsB,UAAY,MACVW,aAAkBC,MACzBlC,KAAKgB,mBAAoB,EACzBhB,KAAKoC,eAAiB,sGA1CtC,6JAmBKC,KAnBL,yEAmB8C,KAnB9C,uCAoBKA,KApBL,yEAoByC,QApBzC,4CAqBKA,KArBL,wEAqByC,MArBzC,+CAsBKA,KAtBL,yEAsB6C,KAtB7C,wCAwBKC,KAxBL,oHAgCKA,KAhCL,+ECQIzB,G,OAAY,IAAIe,EAAU,CAC5BC,qBAHyB,IAAIH,KAM/Bb,EAAUmB,eAEVO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAaC,KAAMC,GACjB,kBAAC,IAAD,CAAU9B,UAAWA,GACnB,kBAAC,EAAD,SAIN+B,SAASC,eAAe,U,kKC3BbX,EAAb,kCAIaC,EAAb,4HAAyCD,GAI5BY,EAAb,4HAA2CZ,I,gCCRpC,SAASP,EAAMoB,GAClB,OAAO,IAAIC,SAAc,SAACC,GACtBC,WAAWD,EAAKF,MAFxB,oC","file":"static/js/main.05360301.chunk.js","sourcesContent":["export default class User {\r\n    id: number;\r\n    name: string;\r\n    avatar: string;\r\n    point: number;\r\n    orderCount: number;\r\n\r\n    constructor(props: {\r\n        id: number;\r\n        name: string;\r\n        avatar: string;\r\n        point: number;\r\n        orderCount: number;\r\n    }) {\r\n        this.id = props.id;\r\n        this.name = props.name;\r\n        this.avatar = props.avatar;\r\n        this.point = props.point;\r\n        this.orderCount = props.orderCount;\r\n    }\r\n}","import React, { Component, lazy, Suspense } from 'react';\r\nimport logo from './logo.svg';\r\nimport { inject, observer } from 'mobx-react';\r\nimport { AuthStore } from './features/auth/presentation/stores/authStore';\r\nimport { Frame, Loading, Button, Layout, Card } from '@shopify/polaris';\r\nimport User from './features/user/data/entities/user';\r\n\r\nconst Auth = lazy(() => import('./features/auth/presentation/pages/authPage'));\r\nconst TaskPage = lazy(() => import('./features/tasks/presentation/pages/taskPage'));\r\n\r\ninterface AppProps {\r\n  authStore?: AuthStore;\r\n}\r\n\r\n@inject('authStore')\r\n@observer\r\nexport class App extends Component<AppProps> {\r\n\r\n  refresh(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n    event.preventDefault();\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    let isLoading = this.props.authStore?.isMyAccountLoading;\r\n    let content = <Loading />;\r\n\r\n    if (!isLoading) {\r\n      if (this.props.authStore?.myAccountHasError) {\r\n        content = (\r\n          <Card title=\"Произошла ошибка!\">\r\n            <Card.Section>\r\n              <a href=\"#\" onClick={(event) => this.refresh(event)}>Попробуйте обновить страницу</a>\r\n            </Card.Section>\r\n          </Card>\r\n        );\r\n      }\r\n\r\n      if (this.props.authStore?.myAccount === null) {\r\n        content = <Auth />;\r\n      }\r\n\r\n      if (this.props.authStore?.myAccount instanceof User) {\r\n        content = <TaskPage />;\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <Frame>\r\n        <div className=\"d-flex mw-100 mh-100 justify-content-center align-items-center\">\r\n\r\n          <Suspense fallback={<Loading />}>\r\n            {content}\r\n          </Suspense>\r\n        </div>\r\n      </Frame>\r\n    );\r\n  }\r\n}","import { Failure, FailureUnauthorized } from \"../../../../core/failures\";\r\nimport { sleep } from \"../../../../core/utils\";\r\nimport User from \"../../../user/data/entities/user\";\r\n\r\nexport interface AuthRemoteDatasource {\r\n    getMyAccount(): Promise<Failure | User>;\r\n}\r\n\r\nexport class AuthRemoteDatasourceImpl implements AuthRemoteDatasource{\r\n    async getMyAccount(): Promise<Failure | User> {\r\n        await sleep(1000);\r\n\r\n        // return new Failure();\r\n        // return new FailureUnauthorized();\r\n        return new User({\r\n            id: 0,\r\n            name: 'Фамилия Имя',\r\n            avatar: 'https://sun9-2.userapi.com/c846524/v846524973/80b77/mZ5xAnrErxQ.jpg?ava=1',\r\n            point: 100,\r\n            orderCount: 1\r\n        });\r\n    }\r\n}","import { observable, action } from 'mobx';\r\nimport { AuthRemoteDatasource } from \"../../data/datasources/authRemoteDatasource\";\r\nimport { Failure, FailureUnauthorized } from '../../../../core/failures';\r\nimport User from '../../../user/data/entities/user';\r\n\r\nexport class AuthStore {\r\n    private authRemoteDatasource: AuthRemoteDatasource;\r\n\r\n    constructor(props: {\r\n        authRemoteDatasource: AuthRemoteDatasource;\r\n    }) {\r\n        this.authRemoteDatasource = props.authRemoteDatasource;\r\n\r\n        \r\n    }\r\n\r\n    updating() {\r\n        setInterval(() => {\r\n            if (this.myAccount !== null) {\r\n                this.updateMyAccount();\r\n            }\r\n        }, 5000);\r\n    }\r\n\r\n    @observable isMyAccountLoading: boolean = false;\r\n    @observable myAccount: User | null = null;\r\n    @observable myAccountError: string = '';\r\n    @observable myAccountHasError: boolean = true;\r\n\r\n    @action async getMyAccount() {\r\n        this.isMyAccountLoading = true;\r\n        \r\n        await this.updateMyAccount();\r\n\r\n        this.isMyAccountLoading = false;\r\n    }\r\n\r\n    @action async updateMyAccount() {\r\n        let result = await this.authRemoteDatasource.getMyAccount();\r\n        if (result instanceof User) {\r\n            this.myAccount = result;\r\n        } else if (result instanceof Failure) {\r\n            if (result instanceof FailureUnauthorized) {\r\n                this.myAccountHasError = false;\r\n                this.myAccount = null;\r\n            } else if (result instanceof Failure) {\r\n                this.myAccountHasError = true;\r\n                this.myAccountError = 'Обновите страницу';\r\n            }\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'mobx-react';\r\nimport { AppProvider } from '@shopify/polaris';\r\nimport en from '@shopify/polaris/locales/en.json';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport { AuthRemoteDatasourceImpl } from './features/auth/data/datasources/authRemoteDatasource';\r\nimport { AuthStore } from './features/auth/presentation/stores/authStore';\r\nimport '@shopify/polaris/styles.css';\r\n\r\nlet authRemoteDatasource = new AuthRemoteDatasourceImpl();\r\n\r\nlet authStore = new AuthStore({\r\n  authRemoteDatasource: authRemoteDatasource,\r\n});\r\n\r\nauthStore.getMyAccount();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider i18n={en}>\r\n      <Provider authStore={authStore}>\r\n        <App />\r\n      </Provider>\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","export class Failure {\r\n\r\n}\r\n\r\nexport class FailureUnauthorized extends Failure {\r\n    \r\n}\r\n\r\nexport class FailureTasksCompleted extends Failure {\r\n\r\n}\r\n\r\nexport class FailureTaskNotCompleted extends Failure {\r\n    \r\n}\r\n\r\nexport class FailureWrongData extends Failure {\r\n    \r\n}","export function sleep(duration: number):Promise<void> {\r\n    return new Promise<void>((res) => {\r\n        setTimeout(res, duration);\r\n    });\r\n}"],"sourceRoot":""}